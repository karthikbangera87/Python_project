FILE DESCRIPTION
-------------------

Python_project-core.pyw is the core module of the python malware.

Python program design
1) The program scans if there are any files with .py extension in the current directory and adds them to an infection list.2) Next it scans all files with .py extension in all system drives and extends the infection list.3) Malicious code is embedded in all files found with .py extension throughout the system.4) The user’s memory is filled with large amount of junk values to consume memory.5) Python libraries are utilized to access windows API, monitor user keystrokes, clicksnapshots of user activity and mail the user information to the attacker.
In addition to the above, the malicious python program also has payload in terms of registry entries that disables the task manger, registry editor, user access control and adds the malicious python program to the boot script in windows and this is done through the payload.vbs

The python program is converted to an executable using py2exe, then an installer is constructed through innosetup for the deployment of the code on the windows platform.

payload.vbs is constructed to make suitable registry entries. 

Construction of malicious python program
• PyHook is a python library that provides callbacks to global mouse and keyboard events in windows.• Python imaging library that provides image processing functionality to the python interpreter.• PyWin32 that provides access to Windows API.The python program imports the features provided by the above-mentioned libraries and the program first calls:• Searchpy () method that takes the current working directory in which the program is running as argument. The search method scans all files with .py extension and adds them to files to infect list.• Scanpy () method is called that scans other system drives for python files and keeps adding the python files found to this files to infect list.• The files to infect list once built has the list of all the python files present in the system.• Infectpy () method is called that takes the files to infect as argument. The infect method opens the payload file present in the current directory and copies its content to all pythonfiles in the system.• Next, the current Thread ID is stored in a variable main_id and the current threadspawns another thread that calls the method keytracker () to perform the key loggingfunctionality.• The keytracker () method makes use windows API like win32gui to keep track of theapplication windows that are currently active. Pyhook is used to wrap around keyboard hooks in the Windows Hooking API for use in Python applications. Programs that wantto receive notifications of global input events must have a Windows message pump. The PumpMessages() method in the Win32 Extensions package for Python is used for this purpose.• A Hook manager object is created and provides callbacks with regard to keyboard events.• The OnKeyboardEvent () handler is called that takes the event (key down) as the argument and the keystrokes are logged as they occur onto a log file.• Simultaneously for specific foreground browser windows that have Google, Facebook the OnKeyboardEvent () method in turn creates another thread that calls the takeScreenshots () method passing the no.of shots to be taken and interval between the shots as argument. The takeScreenshots () method calls the Screenshot () that makes use of the python-imaging library to take pictures of these specific browser windows. For other windows only the keystrokes are tracked.
• The images taken are named as per the format (Year, Month, Day, Hour, Minutes and seconds) by the Screenshot () method are saved and these images are added to list called LOG_TOSEND. The list is used to keep track of all the images clicked and to send the images to the attacker.• The logging duration can be specified or the logging can run infinitely.• On completion of the logging, the send email method () is used and the log filesgenerated along with the images is attached and an email is sent to the attacker.

References1. http://cranklin.wordpress.com/2. https://docs.python.org/2/3. http://www.tinkernut.com/4. http://technicdynamic.com/5. http://www.stackoverflow.com6. http://www.jrsoftware.org/ishelp/7. Wikipedia and python documentation for Pyhook, Python imaging library,pywin32.


